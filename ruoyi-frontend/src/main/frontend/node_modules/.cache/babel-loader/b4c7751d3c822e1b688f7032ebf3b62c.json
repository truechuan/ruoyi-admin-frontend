{"remainingRequest":"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/thread-loader/dist/cjs.js!/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/babel-loader/lib/index.js!/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/src/main.js","dependencies":[{"path":"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/src/main.js","mtime":1578710388000},{"path":"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/core-js/modules/es6.array.iterator.js\";\nimport \"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/core-js/modules/es6.promise.js\";\nimport \"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/core-js/modules/es6.object.assign.js\";\nimport \"/Users/chenchuan/Documents/diandabai/diandabai/ruoyi-frontend/src/main/frontend/node_modules/core-js/modules/es7.promise.finally.js\";\nimport Vue from 'vue';\nimport Cookies from 'js-cookie';\nimport 'normalize.css/normalize.css'; // a modern alternative to CSS resets\n\nimport Element from 'element-ui';\nimport \"./assets/styles/element-variables.scss\";\nimport '@/assets/styles/index.scss'; // global css\n\nimport '@/assets/styles/ruoyi.scss'; // ruoyi css\n\nimport App from \"./App\";\nimport store from \"./store\";\nimport router from \"./router\";\nimport permission from \"./directive/permission\";\nimport \"./assets/icons\"; // icon\n\nimport \"./permission\"; // permission control\n\nimport { getDicts } from \"@/api/system/dict/data\";\nimport { getConfigKey } from \"@/api/system/config\";\nimport { parseTime, resetForm, addDateRange, selectDictLabel, download } from \"@/utils/ruoyi\";\nimport Pagination from \"@/components/Pagination\"; // 全局方法挂载\n\nVue.prototype.getDicts = getDicts;\nVue.prototype.getConfigKey = getConfigKey;\nVue.prototype.parseTime = parseTime;\nVue.prototype.resetForm = resetForm;\nVue.prototype.addDateRange = addDateRange;\nVue.prototype.selectDictLabel = selectDictLabel;\nVue.prototype.download = download;\n\nVue.prototype.msgSuccess = function (msg) {\n  this.$message({\n    showClose: true,\n    message: msg,\n    type: \"success\"\n  });\n};\n\nVue.prototype.msgError = function (msg) {\n  this.$message({\n    showClose: true,\n    message: msg,\n    type: \"error\"\n  });\n};\n\nVue.prototype.msgInfo = function (msg) {\n  this.$message.info(msg);\n}; // 全局组件挂载\n\n\nVue.component('Pagination', Pagination);\nVue.use(permission);\n/**\r\n * If you don't want to use mock-server\r\n * you want to use MockJs for mock api\r\n * you can execute: mockXHR()\r\n *\r\n * Currently MockJs will be used in the production environment,\r\n * please remove it before going online! ! !\r\n */\n\nVue.use(Element, {\n  size: Cookies.get('size') || 'medium' // set element-ui default size\n\n});\nVue.config.productionTip = false;\nnew Vue({\n  el: '#app',\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n});",null]}